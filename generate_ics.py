import json
from icalendar import Calendar, Event
import datetime
import icalendar
from datetime import datetime as dt
import pytz

cal = Calendar()
cal.add('prodid', '-//IT IS GENERATED BY ADITYA PRATAP SINGH//')
cal.add('version', '1.0')

inputfile='timetable.json'
outfile='timetable.ics'

UNTIL = dt(2017, 11, 30, 23, 59,tzinfo=pytz.timezone('Asia/Kolkata')) # Upto which date it should repeat

days = {} # Days to number conversion
days["Monday"] = 0
days["Tuesday"] = 1
days["Wednesday"] = 2
days["Thursday"] = 3
days["Friday"] = 4
days["Saturday"] = 5

def from_current(now, weekday):
    days_more = weekday - now.weekday()
    if days_more <= 0: # It will add to next week
        days_more += 7
    return now + datetime.timedelta(days_more)

def generate_time(next_day,lec_time):
    hours = int(lec_time[0] + lec_time[1])
    minu = int(lec_time[3] + lec_time[4])
    sec = int(lec_time[6] + lec_time[7])
    return dt(next_day.year,next_day.month, next_day.day, hours, minu, tzinfo=pytz.timezone('Asia/Kolkata'))

def generate_event(summary ,description , lec_start , lec_end ,location,freq_of_occurrence):
    event = Event()
    event.add('summary', summary)
    event.add('description', description)
    event.add('dtstart', lec_start)
    event.add('dtend', lec_end)
    event.add('location',location)
    event.add('rrule', { 'FREQ':freq_of_occurrence, 'UNTIL':UNTIL})
    return event

if __name__ == '__main__':
    now = datetime.datetime.now()
           
    with open(inputfile,'rb') as foo:
            data = json.load(foo)         
    for day in data:
         begin_day = from_current(now,days[day])
         for time in data[day]:
               event = Event()
               lecSt = time['start']['lecSt']
               lecEd = time['end']['lecEd']
               summary = time['summary'] 
               description = time['description']
               location = time['location']
               event = generate_event(summary ,description , generate_time(begin_day,lecSt) , generate_time(begin_day,lecEd),location, "WEEKLY") 
               cal.add_component(event)

    f = open(outfile, 'wb')
    f.write(cal.to_ical())
    f.close()        
    print("INFO: Your timetable has been written to %s " % outfile )

